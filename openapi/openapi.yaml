openapi: 3.1.0
info:
  title: Feather - File API
  description: 'The entire API definition for the Feather File API service.

    (Generated on: 30 Apr 2024 at 06:31:17)'
  contact:
    name: Binary Birds
    url: https://binarybirds.com
    email: info@binarybirds.com
  version: 1.0.0
tags:
- name: File - Storage
  description: ''
servers:
- url: http://localhost:8080
  description: dev
paths:
  /file/storage/upload/chunk/{fileId}:
    parameters:
    - $ref: '#/components/parameters/FileStorageId'
    post:
      tags:
      - File - Storage
      summary: Finish chunked
      description: Finishes a chunked upload
      operationId: chunkedFinishFileStorage
      requestBody:
        description: Chunked finish request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileStorageChunkedFinish'
        required: true
      responses:
        200:
          $ref: '#/components/responses/FileStorageSimpleDetail'
        400:
          $ref: '#/components/responses/FeatherCoreBadRequest'
        401:
          $ref: '#/components/responses/FeatherCoreUnauthorized'
        403:
          $ref: '#/components/responses/FeatherCoreForbidden'
        404:
          $ref: '#/components/responses/FeatherCoreNotFound'
        415:
          $ref: '#/components/responses/FeatherCoreUnsupportedMediaType'
        422:
          $ref: '#/components/responses/FeatherCoreUnprocessableContent'
      security:
      - FeatherCoreBearerToken: []
    delete:
      tags:
      - File - Storage
      summary: Abort chunked
      description: Abort a chunked upload
      operationId: chunkedAbortFileStorage
      responses:
        204:
          $ref: '#/components/responses/FeatherCoreNoContent'
        400:
          $ref: '#/components/responses/FeatherCoreBadRequest'
        401:
          $ref: '#/components/responses/FeatherCoreUnauthorized'
        403:
          $ref: '#/components/responses/FeatherCoreForbidden'
        404:
          $ref: '#/components/responses/FeatherCoreNotFound'
        415:
          $ref: '#/components/responses/FeatherCoreUnsupportedMediaType'
        422:
          $ref: '#/components/responses/FeatherCoreUnprocessableContent'
      security:
      - FeatherCoreBearerToken: []
  /file/storage/upload/chunk/{fileId}/chunks/{chunkNumber}:
    parameters:
    - $ref: '#/components/parameters/FileStorageId'
    - $ref: '#/components/parameters/FileStorageChunkNumber'
    post:
      tags:
      - File - Storage
      summary: Upload chunk
      description: Upload a chunk data
      operationId: chunkedUploadChunkFileStorage
      requestBody:
        description: Upload request body
        content:
          '*/*':
            schema:
              type: string
              contentEncoding: binary
        required: true
      responses:
        200:
          $ref: '#/components/responses/FileStorageChunkedChunk'
        400:
          $ref: '#/components/responses/FeatherCoreBadRequest'
        401:
          $ref: '#/components/responses/FeatherCoreUnauthorized'
        403:
          $ref: '#/components/responses/FeatherCoreForbidden'
        404:
          $ref: '#/components/responses/FeatherCoreNotFound'
        415:
          $ref: '#/components/responses/FeatherCoreUnsupportedMediaType'
        422:
          $ref: '#/components/responses/FeatherCoreUnprocessableContent'
      security:
      - FeatherCoreBearerToken: []
    delete:
      tags:
      - File - Storage
      summary: Remove chunk
      description: Removes a chunk
      operationId: chunkedRemoveChunkFileStorage
      responses:
        204:
          $ref: '#/components/responses/FeatherCoreNoContent'
        400:
          $ref: '#/components/responses/FeatherCoreBadRequest'
        401:
          $ref: '#/components/responses/FeatherCoreUnauthorized'
        403:
          $ref: '#/components/responses/FeatherCoreForbidden'
        404:
          $ref: '#/components/responses/FeatherCoreNotFound'
        415:
          $ref: '#/components/responses/FeatherCoreUnsupportedMediaType'
        422:
          $ref: '#/components/responses/FeatherCoreUnprocessableContent'
      security:
      - FeatherCoreBearerToken: []
  /file/storage/upload/chunk:
    post:
      tags:
      - File - Storage
      summary: Creates a chunked upload
      description: Create a document using a chunked upload
      operationId: chunkedUploadFileStorage
      responses:
        200:
          $ref: '#/components/responses/FileStorageChunkedDetail'
        400:
          $ref: '#/components/responses/FeatherCoreBadRequest'
        401:
          $ref: '#/components/responses/FeatherCoreUnauthorized'
        403:
          $ref: '#/components/responses/FeatherCoreForbidden'
        404:
          $ref: '#/components/responses/FeatherCoreNotFound'
        415:
          $ref: '#/components/responses/FeatherCoreUnsupportedMediaType'
        422:
          $ref: '#/components/responses/FeatherCoreUnprocessableContent'
      security:
      - FeatherCoreBearerToken: []
  /file/storage/download/{fileId}:
    parameters:
    - $ref: '#/components/parameters/FileStorageId'
    get:
      tags:
      - File - Storage
      summary: Download a file
      description: Download a file
      operationId: downloadFileStorage
      parameters:
      - $ref: '#/components/parameters/FileStorageDownloadRequestHeader'
      responses:
        200:
          $ref: '#/components/responses/FileStorageDownload'
        400:
          $ref: '#/components/responses/FeatherCoreBadRequest'
        401:
          $ref: '#/components/responses/FeatherCoreUnauthorized'
        403:
          $ref: '#/components/responses/FeatherCoreForbidden'
        415:
          $ref: '#/components/responses/FeatherCoreUnsupportedMediaType'
        422:
          $ref: '#/components/responses/FeatherCoreUnprocessableContent'
      security:
      - FeatherCoreBearerToken: []
  /file/storage: {}
  /file/storage/upload:
    post:
      tags:
      - File - Storage
      summary: Upload a file
      description: Upload a file
      operationId: simpleUploadFileStorage
      requestBody:
        description: Upload request body
        content:
          '*/*':
            schema:
              type: string
              contentEncoding: binary
        required: true
      responses:
        200:
          $ref: '#/components/responses/FileStorageSimpleDetail'
        400:
          $ref: '#/components/responses/FeatherCoreBadRequest'
        401:
          $ref: '#/components/responses/FeatherCoreUnauthorized'
        403:
          $ref: '#/components/responses/FeatherCoreForbidden'
        415:
          $ref: '#/components/responses/FeatherCoreUnsupportedMediaType'
        422:
          $ref: '#/components/responses/FeatherCoreUnprocessableContent'
      security:
      - FeatherCoreBearerToken: []
components:
  schemas:
    FeatherCoreBadRequestError:
      type: object
      description: ''
      properties:
        key:
          $ref: '#/components/schemas/FeatherCoreBadRequestErrorKey'
        message:
          $ref: '#/components/schemas/FeatherCoreErrorMessage'
      required:
      - key
      - message
    FeatherCoreBadRequestErrorKey:
      type: string
      enum:
      - missingRequestBody
      - invalidRequestBody
      description: You can use this key for translation purposes.
      examples:
      - missingRequestBody
      - invalidRequestBody
    FeatherCoreConflictError:
      type: object
      description: ''
      properties:
        key:
          $ref: '#/components/schemas/FeatherCoreConflictErrorKey'
        message:
          $ref: '#/components/schemas/FeatherCoreErrorMessage'
      required:
      - key
      - message
    FeatherCoreConflictErrorKey:
      type: string
      description: The system key of the related object.
      examples:
      - module.model
      - foo.bar
    FeatherCoreCreatedAt:
      type: string
      format: date-time
      description: Object creation date
      examples:
      - '2023-04-04T09:20:15.000Z'
    FeatherCoreErrorMessage:
      type: string
      description: The original error message provided by the system.
      examples:
      - Something went wrong with the request.
    FeatherCoreForbiddenError:
      type: object
      description: ''
      properties:
        key:
          $ref: '#/components/schemas/FeatherCoreForbiddenErrorKey'
        message:
          $ref: '#/components/schemas/FeatherCoreErrorMessage'
      required:
      - key
      - message
    FeatherCoreForbiddenErrorKey:
      type: string
      description: The system key of the related object.
      examples:
      - module.model
      - foo.bar
    FeatherCoreGoneError:
      type: object
      description: ''
      properties:
        key:
          $ref: '#/components/schemas/FeatherCoreGoneErrorKey'
        message:
          $ref: '#/components/schemas/FeatherCoreErrorMessage'
      required:
      - key
      - message
    FeatherCoreGoneErrorKey:
      type: string
      description: The system key of the related object.
      examples:
      - module.model
      - foo.bar
    FeatherCoreHeadersContentLength:
      type: integer
      description: Content length
    FeatherCoreInternalServerErrorError:
      type: object
      description: ''
      properties:
        key:
          $ref: '#/components/schemas/FeatherCoreInternalServerErrorErrorKey'
        message:
          $ref: '#/components/schemas/FeatherCoreErrorMessage'
      required:
      - key
      - message
    FeatherCoreInternalServerErrorErrorKey:
      type: string
      description: The key of the related object.
      examples:
      - module.model
      - foo.bar
    FeatherCoreListCount:
      type: integer
      description: Total elements
      examples:
      - 42
    FeatherCoreListOrder:
      type: string
      enum:
      - asc
      - desc
      default: asc
      description: Order of the list (ascending or descending).
      examples:
      - asc
      - desc
    FeatherCoreListPage:
      type: object
      description: Page properties
      properties:
        size:
          $ref: '#/components/schemas/FeatherCoreListPageSize'
        index:
          $ref: '#/components/schemas/FeatherCoreListPageIndex'
      required:
      - size
      - index
    FeatherCoreListPageIndex:
      type: integer
      default: 0
      description: Page index
      examples:
      - 0
    FeatherCoreListPageSize:
      type: integer
      default: 50
      description: Page size
      examples:
      - 10
    FeatherCoreListSearch:
      type: string
      description: Value of the search term.
      examples:
      - foo
    FeatherCoreMethodNotAllowedError:
      type: object
      description: ''
      properties:
        key:
          $ref: '#/components/schemas/FeatherCoreMethodNotAllowedErrorKey'
        message:
          $ref: '#/components/schemas/FeatherCoreErrorMessage'
      required:
      - key
      - message
    FeatherCoreMethodNotAllowedErrorKey:
      type: string
      description: The system key of the related object.
      examples:
      - module.model
      - foo.bar
    FeatherCoreNotAcceptableError:
      type: object
      description: ''
      properties:
        key:
          $ref: '#/components/schemas/FeatherCoreNotAcceptableErrorKey'
        message:
          $ref: '#/components/schemas/FeatherCoreErrorMessage'
      required:
      - key
      - message
    FeatherCoreNotAcceptableErrorKey:
      type: string
      description: The system key of the related object.
      examples:
      - module.model
      - foo.bar
    FeatherCoreNotFoundError:
      type: object
      description: ''
      properties:
        key:
          $ref: '#/components/schemas/FeatherCoreNotFoundErrorKey'
        message:
          $ref: '#/components/schemas/FeatherCoreErrorMessage'
      required:
      - key
      - message
    FeatherCoreNotFoundErrorKey:
      type: string
      description: The system key of the related object.
      examples:
      - module.model
      - foo.bar
    FeatherCoreUnauthorizedError:
      type: object
      description: ''
      properties:
        key:
          $ref: '#/components/schemas/FeatherCoreUnauthorizedErrorKey'
        message:
          $ref: '#/components/schemas/FeatherCoreErrorMessage'
      required:
      - key
      - message
    FeatherCoreUnauthorizedErrorKey:
      type: string
      const: invalidUserToken
      description: You can use this key for translation purposes.
      examples:
      - invalidUserToken
    FeatherCoreUnprocessableContentError:
      type: object
      description: ''
      properties:
        key:
          $ref: '#/components/schemas/FeatherCoreUnprocessableContentErrorKey'
        message:
          $ref: '#/components/schemas/FeatherCoreErrorMessage'
        failures:
          $ref: '#/components/schemas/FeatherCoreUnprocessableContentErrorFailure'
      required:
      - key
      - message
      - failures
    FeatherCoreUnprocessableContentErrorFailure:
      type: array
      description: ''
      items:
        $ref: '#/components/schemas/FeatherCoreUnprocessableContentErrorFailureDetail'
      maxItems: 1000
      minItems: 0
    FeatherCoreUnprocessableContentErrorFailureDetail:
      type: object
      description: ''
      properties:
        key:
          $ref: '#/components/schemas/FeatherCoreUnprocessableContentErrorFailureDetailKey'
        message:
          $ref: '#/components/schemas/FeatherCoreErrorMessage'
      required:
      - key
      - message
    FeatherCoreUnprocessableContentErrorFailureDetailKey:
      type: string
      description: Related field key for the error detail.
      examples:
      - email
      - password
      - coordinate
      - coordinate.latitude
      - coordinate.longitude
    FeatherCoreUnprocessableContentErrorKey:
      type: string
      const: validation
      description: You can use this key for translation purposes.
      examples:
      - validation
    FeatherCoreUnsupportedMediaTypeError:
      type: object
      description: ''
      properties:
        key:
          $ref: '#/components/schemas/FeatherCoreUnsupportedMediaTypeErrorKey'
        message:
          $ref: '#/components/schemas/FeatherCoreErrorMessage'
      required:
      - key
      - message
    FeatherCoreUnsupportedMediaTypeErrorKey:
      type: string
      description: You can use this key for translation purposes.
      examples:
      - application/json
      - text/html
    FeatherCoreUpdatedAt:
      type: string
      format: date-time
      description: Last update for the object
      examples:
      - '2023-04-04T09:20:15.000Z'
    FileStorageChunkNumber:
      type: integer
      description: The number of the chunk
    FileStorageChunkedChunk:
      type: object
      description: ChunkedChunk
      properties:
        id:
          $ref: '#/components/schemas/FileStorageId'
        number:
          $ref: '#/components/schemas/FileStorageChunkNumber'
      required:
      - id
      - number
    FileStorageChunkedDetail:
      type: object
      description: Chunked detail
      properties:
        id:
          $ref: '#/components/schemas/FileStorageId'
      required:
      - id
    FileStorageChunkedFinish:
      type: array
      description: ChunkedFinish
      items:
        $ref: '#/components/schemas/FileStorageChunkedDetail'
      maxItems: 1000
      minItems: 0
    FileStorageDownloadHeader:
      type: string
      description: Download request header
      examples:
      - bytes=0-1023
    FileStorageId:
      type: string
      description: Unique identifier
      examples:
      - P6p5WCctPKqhYKtGMUoTQ
    FileStorageSimpleDetail:
      type: object
      description: Simple detail
      properties:
        id:
          $ref: '#/components/schemas/FileStorageId'
      required:
      - id
  responses:
    FeatherCoreBadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FeatherCoreBadRequestError'
    FeatherCoreConflict:
      description: Conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FeatherCoreConflictError'
    FeatherCoreForbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FeatherCoreForbiddenError'
    FeatherCoreGone:
      description: Gone
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FeatherCoreGoneError'
    FeatherCoreHead:
      description: Ok
      headers:
        Content-Length:
          $ref: '#/components/headers/Content-Length'
    FeatherCoreInternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FeatherCoreInternalServerErrorError'
    FeatherCoreMethodNotAllowed:
      description: Method not allowed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FeatherCoreMethodNotAllowedError'
    FeatherCoreNoContent:
      description: No content
    FeatherCoreNotAcceptable:
      description: Not acceptable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FeatherCoreNotAcceptableError'
    FeatherCoreNotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FeatherCoreNotFoundError'
    FeatherCoreOk:
      description: ok
    FeatherCoreUnauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FeatherCoreUnauthorizedError'
    FeatherCoreUnprocessableContent:
      description: Unprocessable content
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FeatherCoreUnprocessableContentError'
    FeatherCoreUnsupportedMediaType:
      description: Unsupported media type
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FeatherCoreUnsupportedMediaTypeError'
    FileStorageChunkedChunk:
      description: Chunked chunk details object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FileStorageChunkedChunk'
    FileStorageChunkedDetail:
      description: Chunked details object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FileStorageChunkedDetail'
    FileStorageDownload:
      description: Download response
      content:
        '*/*':
          schema:
            type: string
            contentEncoding: binary
    FileStorageSimpleDetail:
      description: Document detail object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FileStorageSimpleDetail'
  parameters:
    FeatherCoreListOrder:
      name: order
      in: query
      schema:
        $ref: '#/components/schemas/FeatherCoreListOrder'
      description: Sort order parameter
    FeatherCoreListPageIndex:
      name: pageIndex
      in: query
      schema:
        $ref: '#/components/schemas/FeatherCoreListPageIndex'
      description: The current page number
    FeatherCoreListPageSize:
      name: pageSize
      in: query
      schema:
        $ref: '#/components/schemas/FeatherCoreListPageSize'
      description: The number of items per page
    FeatherCoreListSearch:
      name: search
      in: query
      schema:
        $ref: '#/components/schemas/FeatherCoreListSearch'
      description: The list search value
    FileStorageChunkNumber:
      name: chunkNumber
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/FileStorageChunkNumber'
      description: The number of the chunk
    FileStorageDownloadRequestHeader:
      name: Range
      in: header
      required: true
      schema:
        $ref: '#/components/schemas/FileStorageDownloadHeader'
      description: Range download request header
    FileStorageId:
      name: fileId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/FileStorageId'
      description: File identifier
  requestBodies:
    FileStorageChunkedFinish:
      description: Chunked finish request body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FileStorageChunkedFinish'
      required: true
    FileStorageUpload:
      description: Upload request body
      content:
        '*/*':
          schema:
            type: string
            contentEncoding: binary
      required: true
  headers:
    Content-Length:
      schema:
        $ref: '#/components/schemas/FeatherCoreHeadersContentLength'
      description: Content length header
  securitySchemes:
    FeatherCoreBearerToken:
      description: Authorization header using a Bearer token
      type: http
      scheme: bearer
      bearerFormat: token
